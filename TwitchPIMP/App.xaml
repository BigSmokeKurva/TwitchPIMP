<Application x:Class="TwitchPIMP.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TwitchPIMP"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <FontFamily x:Key="Inter SemiBold">./Fonts/Inter-SemiBold.ttf#Inter Semi Bold</FontFamily>
        <FontFamily x:Key="Gugi Regular">./Fonts/Gugi-Regular.ttf#Gugi</FontFamily>
        <GridLength x:Key="WindowSplitSize">30</GridLength>
        <CornerRadius x:Key="WindowCornerRadius">15</CornerRadius>
        <CornerRadius x:Key="ElementCornerRadius">10</CornerRadius>
        <Style x:Key="TextBoxDefaultStyle" TargetType="TextBox">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="{StaticResource ElementCornerRadius}"/>
                </Style>
            </Style.Resources>
            <Setter Property="Foreground" Value="#dddddd"/>
            <Setter Property="BorderBrush" Value="#25FFFFFF"/>
            <Setter Property="Background" Value="#0DFFFFFF"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0.5"/>
            <Setter Property="Padding" Value="2,1,2,2"/>
            <Setter Property="MinHeight" Value="45"/>
            <Setter Property="MaxHeight" Value="45"/>
            <Setter Property="FontFamily" Value="{StaticResource Inter SemiBold}"/>
        </Style>
        <Style x:Key="LabelDefaultStyle" TargetType="Label">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="FontFamily" Value="{StaticResource Inter SemiBold}"/>
        </Style>
        <Style x:Key="LabelGoodStyle" TargetType="Label">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Grid MinHeight="45" MaxHeight="45"  HorizontalAlignment="Center">
                            <Image Source="/Assets/good.png"/>
                            <Label Content="{TemplateBinding Content}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Margin="5" Style="{StaticResource LabelDefaultStyle}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="110"/>
        </Style>
        <Style x:Key="LabelBadStyle" TargetType="Label">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Grid MinHeight="45" MaxHeight="45"  HorizontalAlignment="Center">
                            <Image Source="/Assets/bad.png"/>
                            <Label Content="{TemplateBinding Content}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Margin="5" Style="{StaticResource LabelDefaultStyle}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="110"/>
        </Style>
        <Style x:Key="LabelCounterDefaultStyle" TargetType="Label">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Grid MinHeight="45" MaxHeight="45"  HorizontalAlignment="Center">
                            <Image Source="/Assets/default_counter.png"/>
                            <Label Content="{TemplateBinding Content}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Margin="5" Style="{StaticResource LabelDefaultStyle}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="110"/>
        </Style>
        <Style x:Key="LabelCounterTokenCheckStyle" TargetType="Label">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Grid MinHeight="45" MaxHeight="45"  HorizontalAlignment="Center">
                            <Image Source="/Assets/bits_counter.png"/>
                            <Label Content="{TemplateBinding Content}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Margin="5" Style="{StaticResource LabelDefaultStyle}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="110"/>
        </Style>
        <Style x:Key="SwitchStyle" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid x:Name="StateOn" Visibility="Hidden" MinHeight="35" MaxHeight="35">
                                <Image Source="/Assets/switch _background_on.png" Margin="0,4,0,4"/>
                                <Image Source="/Assets/switch _circle_on.png" HorizontalAlignment="Right" Margin="0"/>
                            </Grid>
                            <Grid x:Name="StateOff" Visibility="Hidden" MinHeight="35" MaxHeight="35">
                                <Image Source="/Assets/switch _background_off.png" Margin="0,4,0,4"/>
                                <Image Source="/Assets/switch _circle_off.png" HorizontalAlignment="Left" Margin="0"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="StateOn" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="StateOff" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LoginSwitchStyle" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid x:Name="StateOn" Visibility="Hidden">
                                <Image Source="/Assets/switch _background_on.png" Margin="0,4,0,4"/>
                                <Image Source="/Assets/switch _circle_on.png" HorizontalAlignment="Right" Margin="0"/>
                            </Grid>
                            <Grid x:Name="StateOff" Visibility="Hidden">
                                <Image Source="/Assets/switch _background_off.png" Margin="0,4,0,4"/>
                                <Image Source="/Assets/switch _circle_off.png" HorizontalAlignment="Left" Margin="0"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="StateOn" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="StateOff" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MenuButton" TargetType="Button">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}">
                            <Image Source="/Assets/menu_button.png" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Hidden" x:Name="ImageIsEnable"/>
                            <ContentPresenter/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ImageIsEnable" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="ImageIsEnable" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="30,0,30,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        <Style x:Key="ProxyComboBox" TargetType="ComboBox">
            <Setter Property="FontFamily" Value="{StaticResource Inter SemiBold}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Background="Transparent" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <Border Background="#0DFFFFFF" CornerRadius="{StaticResource ElementCornerRadius}" BorderThickness="0.5" BorderBrush="#25FFFFFF">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="3*" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <!--<Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="12" Background="Transparent" BorderBrush="#25FFFFFF" BorderThickness="0.5" />-->
                                                <!--<Border Grid.Column="0" CornerRadius="12,0,0,12"  Margin="0"  Background="Transparent"  BorderBrush="#25FFFFFF" BorderThickness="0,0,0,0" />-->
                                                <Image Source="/Assets/combobox_togglebutton.png" Margin="0,0,15,0" Grid.Column="1" Width="20" HorizontalAlignment="Right"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="FirstColumn" Width="3*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Label Content="{TemplateBinding SelectionBoxItem}" FontFamily="{StaticResource Inter SemiBold}" FontSize="{TemplateBinding FontSize}" IsHitTestVisible="False" Foreground="#dddddd" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                <!--<ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3" HorizontalAlignment="Center" VerticalAlignment="Center" />-->
                            </Grid>
                            <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Fade">
                                <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#232430" CornerRadius="3" />
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Foreground" Value="#dddddd"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border Name="Border" Background="Transparent">
                                        <ContentPresenter HorizontalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="#FF303241"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="StartButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}">
                            <Image Source="/Assets/button_start.png" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Label Content="{TemplateBinding Content}" FontSize="35" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#ffffff" Padding="0" FontFamily="{StaticResource Inter SemiBold}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Height" Value="60"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="0,40,0,0"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        <Style x:Key="ButtonUpload" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}">
                            <Image Source="/Assets/folder_upload.png"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="MinHeight" Value="45"/>
            <Setter Property="MaxHeight" Value="45"/>
            <Setter Property="Width" Value="58"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        <Style x:Key="SenderComboBox" TargetType="ComboBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Background="Transparent" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <Border Background="#0DFFFFFF" CornerRadius="{StaticResource ElementCornerRadius}" BorderThickness="0.5" BorderBrush="#25FFFFFF">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="3*" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <!--<Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="12" Background="Transparent" BorderBrush="#25FFFFFF" BorderThickness="0.5" />-->
                                                <!--<Border Grid.Column="0" CornerRadius="12,0,0,12"  Margin="0"  Background="Transparent"  BorderBrush="#25FFFFFF" BorderThickness="0,0,0,0" />-->
                                                <Image Source="/Assets/combobox_togglebutton.png" Margin="0,0,15,0" Grid.Column="1" Width="20" HorizontalAlignment="Right"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="5*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Label Content="{TemplateBinding SelectionBoxItem}" FontFamily="{StaticResource Inter SemiBold}" IsHitTestVisible="False" Foreground="#dddddd" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <!--<ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3" HorizontalAlignment="Center" VerticalAlignment="Center" />-->
                            </Grid>
                            <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Fade">
                                <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#232430" CornerRadius="3" >
                                        <ScrollViewer x:Name="ScrollViewer" HorizontalScrollBarVisibility="Disabled" CanContentScroll="True" VerticalScrollBarVisibility="Hidden" Margin="3">
                                            <StackPanel IsItemsHost="True"/>
                                        </ScrollViewer>
                                    </Border>

                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Foreground" Value="#dddddd"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border Name="Border" Background="Transparent">
                                        <ContentPresenter HorizontalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="#FF303241"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="WindowBorderStyle" TargetType="Border">
            <Setter Property="Background" Value="#991C1C1C"/>
            <Setter Property="CornerRadius" Value="{StaticResource WindowCornerRadius}"/>
        </Style>
    </Application.Resources>
</Application>
